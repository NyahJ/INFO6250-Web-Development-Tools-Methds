{"version":3,"file":"services.js","mappings":"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","sources":["webpack://js-service-calls/./src/services.js"],"sourcesContent":["// This is a sample file that demonstrates\n// how you can write an abstraction around\n// a fetch() call\n// This exported function returns a promise\n// that resolves with data\n// or rejects with an error object\n//\n// The caller of this function can decide\n// what to do with the data\n// or what to do with the error\n//\n// You can add to this file and use this function\n// or write your own files/functions\n\n(function() {\n\n  const MESSAGES = {\n    networkError: \"Failed to connect to the network, please try again!\",\n    default: \"Something went wrong, please try again!\",\n    \"auth-insufficient\": \"Dog is not allowed in username\",\n    \"required-username\": \"Invalid username: empty or not alphanumeric\",\n  };\n\n  checkSession();\n\n  function checkSession() {\n      fetchSession()\n      .then((user) => {\n        targetUser = user.username;\n        fetchWord()\n          .then((word) => {\n            const storedWord = word.storedWord;\n              if (storedWord === '') {\n                targetWord = \"Ops, no word is stored\";\n              } else {\n                targetWord = storedWord;\n              }\n            renderMain();\n          })\n          .catch((error) => {\n            renderStatus(error);\n          });\n      })\n      .catch(() => renderLogin());\n  }\n\n  function fetchSession() {\n    return fetch('/api/session', {\n      method: \"GET\",\n    })\n      .catch(() => Promise.reject({ error: \"networkError\" }))\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        return response\n          .json()\n          .catch((error) => Promise.reject({ error }))\n          .then((err) => Promise.reject(err));\n      });\n  }\n\n  function fetchWord() {\n    return fetch(\"/api/word\")\n      .catch(() => Promise.reject({ error: \"networkError\" }))\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        return response\n          .json()\n          .catch((error) => Promise.reject({ error }))\n          .then((err) => Promise.reject(err));\n      });\n  }\n\n  function addAbilityToLogin() {\n    const buttonEl = document.querySelector(\".login-button\");\n    const usernameEl = document.querySelector(\".login-username\");\n    buttonEl.addEventListener(\"click\", (e) => {\n      const username = usernameEl.value;\n      fetchLogin(username)\n        .then(checkSession)\n        .catch((error) => renderStatus(error));\n    });\n  }\n\n\n  function addAbilityToLogout() {\n    const buttonEl = document.querySelector(\".logout\");\n    buttonEl.addEventListener(\"click\", (e) => {\n      targetWord = undefined;\n      fetchLogout()\n        .then(() => {\n          renderLogin();\n        })\n        .catch();\n    });\n  }\n\n  function fetchLogout() {\n    return fetch(\"/api/session\", {\n      method: \"DELETE\",\n    })\n      .catch(() => Promise.reject({ error: \"networkError\" }))\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        return response\n          .json()\n          .catch((error) => Promise.reject({ error }))\n          .then((err) => Promise.reject(err));\n      });\n  }\n\n  function fetchLogin(username) {\n    return fetch(\"/api/session\", {\n      method: \"POST\",\n      headers: new Headers({\n        \"content-type\": \"application/json\",\n      }),\n      body: JSON.stringify({ username }),\n    })\n      .catch(() => Promise.reject({ error: \"networkError\" }))\n      .then((response) => {\n        if (response.ok) {\n          return;\n        }\n        return response\n          .json()\n          .catch((error) => Promise.reject({ error }))\n          .then((err) => Promise.reject(err));\n      });\n  }\n\n  function addAbilityToUpdateWord() {\n    const contentEl = document.querySelector(\".update-content\");\n    const updateEl = document.querySelector(\".update-button\");\n    updateEl.addEventListener(\"click\", (e) => {\n      const word = contentEl.value;\n      fetchUpdateWord(word)\n        .then(checkSession)\n        .catch((error) => renderStatus(error));\n    });\n  }\n\n  function updateWordInMain() {\n    const wordEl = document.querySelector(\".update-button\");\n    wordEl.innerHTML = targetWord;\n  }\n\n  function fetchUpdateWord(word) {\n    return fetch(\"/api/word\", {\n      method: \"POST\",\n      headers: new Headers({\n        \"content-type\": \"application/json\",\n      }),\n      body: JSON.stringify({ word }),\n    })\n      .catch(() => Promise.reject({ error: \"networkError\" }))\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        return response\n          .json()\n          .catch((error) => Promise.reject({ error }))\n          .then((err) => Promise.reject(err));\n      });\n  }\n\n\n  //functions for rendering\n  function renderLogin() {\n    const loginEl = document.querySelector(\".container\");\n    loginEl.innerHTML = `\n      <div class=\"title\">\n        <h1>Login</h1>\n        <form>\n            <input class=\"login-username\" type=\"text\" placeholder=\"username\">\n            <button class=\"login-button\">Login</button>\n            <div class=\"status\"></div>\n        </form>\n\n      </div>\n    `;\n\n    addAbilityToLogin();\n  }\n\n  function renderStatus(message) {\n    const statusEl = document.querySelector(\".status\");\n    if (!message) {\n      statusEl.innerText = \"\";\n      return;\n    }\n    const key = message?.error ? message.error : \"default\";\n    statusEl.innerText = MESSAGES[key] || MESSAGES.default;\n  }\n\n  function renderMain() {\n    const mainEl = document.querySelector(\".container\");\n    mainEl.innerHTML = `\n      <div class=\"title\">\n        <h1>Welcome ${targetUser}</h1>\n        <span class=\"current-word\">Word Stored: </span>\n        <div class=\"word\">\n          <span class=\"target-word\">${targetWord}</span>\n        </div>\n        <form class=\"word\">\n            <label>Update your word: </label>\n            <input class=\"update-content\" type=\"text\" placeholder=\"Your new word\" required>\n            <button class=\"update-button\">Update</button>\n          </div>\n          <button class=\"logout\">Logout</button>\n        </form>\n      </div>\n\n    `;\n    addAbilityToUpdateWord();\n    addAbilityToLogout();\n  }\n\n\n})();\n\n\n"],"names":["MESSAGES","networkError","checkSession","fetchSession","then","user","targetUser","username","fetchWord","word","storedWord","targetWord","renderMain","error","renderStatus","renderLogin","fetch","method","Promise","reject","response","ok","json","err","addAbilityToLogin","buttonEl","document","querySelector","usernameEl","addEventListener","e","value","fetchLogin","addAbilityToLogout","undefined","fetchLogout","headers","Headers","body","JSON","stringify","addAbilityToUpdateWord","contentEl","updateEl","fetchUpdateWord","updateWordInMain","wordEl","innerHTML","loginEl","message","statusEl","innerText","key","mainEl"],"sourceRoot":""}